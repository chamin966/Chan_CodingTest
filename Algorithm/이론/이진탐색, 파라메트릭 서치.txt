이진탐색
: 정렬되엉 있는 리스트에서 탐색 범위를 절반씩 좁혀가며 데이터를 탐색한다.
시간복잡도: O(logN)

동작 방식
0. 배열을 정렬한다.
1. 시작점과 끝점을 기준으로 탐색 범위를 명시하고 중간점과 탐색하고자 하는 값을 비교
2. 중간점의 값이 탐색하고자 하는 값보다
=> 작다면 [시작점, 중간점 - 1] 범위로 탐색 범위를 재설정
=> 크다면 [중간점 + 1, 끝점] 범위로 탐색 범위를 재설정
3. 새롭게 설정된 탐색 범위로 계속해서 중간점과 탐색하고자 하는 값이 일치할 때까지 반복
4. left(시작점) > right(끝점) 이 되어도 탐색하고자 하는 값을 찾지 못했다면
찾는 값이 배열에 존재하지 않는 것이다.

이진탐색은 정렬된 배열에서도 쓸 수 있지만, 파라메트릭 서치에도 활용할 수 있다.

파라메트릭 서치
: 최적화 문제(최대 or 최솟값을 찾으시오)를
연속적인 결정 문제(예 or 아니오)로 바꾸어 해결하는 기법
=> 최적화 문제를 여러 개의 결정 문제로 바꾸어 연속적으로 해결해나감으로써,
특정한 조건을 만족하는 가장 알맞은 값을 찾는 것.

일반적으로 코딩 테스트에서 파라메트릭 서치 문제는
최솟값 또는 최대값을 찾는 문제로써, 이진 탐색을 이용하여 해결할 수 있다.

*** 배열과 타겟을 따로 설정하지 않고 ***
가능한 범위의 최솟값과 최댓값을 left, right에 넣고
left < right를 만족시키면서
특정 조건을 만족하는지 검사하고
범위를 재설정해가며 최적화된 값을 발견하는 방식이다.


