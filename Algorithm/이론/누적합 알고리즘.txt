누적합 알고리즘
  • 구간 합 문제: 나열된 𝑁개의 수가 있을 때 특정 구간의 모든 수를 합한 값을 계산하는 문제
  • 예를 들어 5개의 데이터로 구성된 수열 {10, 20, 30, 40, 50}이 있다고 가정한다.
  • 두 번째 수부터 네 번째 수까지의 합은 20 + 30 + 40 = 90이다.

누적합 알고리즘 동작 방식
  • 𝑁개의 정수로 구성된 수열이 있다.
  • 𝑀개의 쿼리(Query) 정보가 주어진다.
  • 각 쿼리는 𝐿𝑒𝑓𝑡와 𝑅𝑖𝑔ℎ𝑡으로 구성된다.
  • 각 쿼리에 대하여 [𝐿𝑒𝑓𝑡, 𝑅𝑖𝑔ℎ𝑡] 구간에 포함된 데이터들의 합을 출력해야 한다.
  • 수행 시간 제한은 𝑶(𝑵 + 𝑴)이다.
  • 접두사 합(Prefix Sum): 배열의 맨 앞부터 특정 위치까지의 합을 미리 구해 놓은 것
  • 접두사 합을 활용한 알고리즘은 다음과 같다.
    • 𝑁개의 수 위치 각각에 대하여 접두사 합을 계산하여 𝑃에 저장한다.
    • 매 𝑀개의 쿼리 정보를 확인할 때 구간 합은 𝑃[𝑅𝑖𝑔ℎ𝑡] – 𝑃[𝐿𝑒𝑓𝑡 – 1]이다

  예시
  Index 1 2 3 4 5 6 7 8
  Value 3 2 4 1 2 2 1 5

       Index 0 1 2 3  4  5  6  7  8
  Prefix Sum 0 3 5 9 10 12 14 15 20
  
  Interval Sum
  • [1, 3] => p[3] – p[0] = 9
  • [3, 5] => p[5] – p[2] = 7
  • [4, 8] => p[8] – p[3] = 11

단순히 한 번에 대한 n부터 m까지의 구간합을 구하는 것은 시간복잡도 O(M)만에 구할 수 있겠지만,
만약 구간합을  K번 구해야 한다면 시간복잡도 O(K * M)이 될 것이다.